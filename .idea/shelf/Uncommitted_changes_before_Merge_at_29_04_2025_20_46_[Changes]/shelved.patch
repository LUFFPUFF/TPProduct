Index: Backend/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>3.4.2</version>\r\n        <relativePath/>\r\n    </parent>\r\n    <groupId>com.example</groupId>\r\n    <artifactId>Backend</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>Backend</name>\r\n    <description>Backend</description>\r\n    <properties>\r\n        <java.version>22</java.version>\r\n        <org.mapstruct.version>1.6.3</org.mapstruct.version>\r\n    </properties>\r\n    <dependencies>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-validation</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-websocket</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-logging</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.security</groupId>\r\n            <artifactId>spring-security-oauth2-resource-server</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.security</groupId>\r\n            <artifactId>spring-security-oauth2-core</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.jsoup</groupId>\r\n            <artifactId>jsoup</artifactId>\r\n            <version>1.17.2</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>commons-fileupload</groupId>\r\n            <artifactId>commons-fileupload</artifactId>\r\n            <version>1.5</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>commons-io</groupId>\r\n            <artifactId>commons-io</artifactId>\r\n            <version>2.18.0</version>\r\n        </dependency>\r\n\r\n        <!-- Spring Boot Starter -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter</artifactId>\r\n        </dependency>\r\n\r\n        <!-- Spring Boot DevTools for automatic restart -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-devtools</artifactId>\r\n            <scope>runtime</scope>\r\n            <optional>true</optional>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.36</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.mapstruct</groupId>\r\n            <artifactId>mapstruct</artifactId>\r\n            <version>${org.mapstruct.version}</version>\r\n        </dependency>\r\n\r\n        <!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor -->\r\n        <dependency>\r\n            <groupId>org.mapstruct</groupId>\r\n            <artifactId>mapstruct-processor</artifactId>\r\n            <version>1.6.2</version>\r\n        </dependency>\r\n\r\n\r\n        <!-- Spring Boot Starter Test for unit and integration tests -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <!-- PostgreSQL JDBC Driver -->\r\n        <dependency>\r\n            <groupId>org.postgresql</groupId>\r\n            <artifactId>postgresql</artifactId>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n\r\n        <!-- Spring Data JPA for working with the database -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n        </dependency>\r\n\r\n        <!-- H2 database for testing purposes (optional) -->\r\n        <dependency>\r\n            <groupId>com.h2database</groupId>\r\n            <artifactId>h2</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-jackson</artifactId>\r\n            <version>0.12.3</version>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-impl</artifactId>\r\n            <version>0.12.3</version>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-api</artifactId>\r\n            <version>0.12.3</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.slf4j</groupId>\r\n            <artifactId>slf4j-api</artifactId>\r\n            <version>2.0.17</version>\r\n        </dependency>\r\n\r\n        <!-- https://mvnrepository.com/artifact/fi.solita.clamav/clamav-client -->\r\n        <dependency>\r\n            <groupId>fi.solita.clamav</groupId>\r\n            <artifactId>clamav-client</artifactId>\r\n            <version>1.0.0</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.glassfish.tyrus</groupId>\r\n            <artifactId>tyrus-client</artifactId>\r\n            <version>2.1.3</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.telegram</groupId>\r\n            <artifactId>telegrambots</artifactId>\r\n            <version>6.8.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.telegram</groupId>\r\n            <artifactId>telegrambots-spring-boot-starter</artifactId>\r\n            <version>6.8.0</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.squareup.okhttp3</groupId>\r\n            <artifactId>okhttp</artifactId>\r\n            <version>4.10.0</version>\r\n        </dependency>\r\n\r\n        <!-- JSON-парсер Jackson -->\r\n        <dependency>\r\n            <groupId>com.fasterxml.jackson.core</groupId>\r\n            <artifactId>jackson-databind</artifactId>\r\n            <version>2.15.0</version>\r\n        </dependency>\r\n\r\n        <!-- Импорт библиотек для работы с почтой через IMAP -->\r\n        <dependency>\r\n            <groupId>javax.mail</groupId>\r\n            <artifactId>javax.mail-api</artifactId>\r\n            <version>1.6.2</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.sun.mail</groupId>\r\n            <artifactId>javax.mail</artifactId>\r\n            <version>1.6.2</version> <!-- Убедитесь, что это последняя доступная версия -->\r\n        </dependency>\r\n\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.8.1</version>\r\n                <configuration>\r\n                    <source>22</source>\r\n                    <target>22</target>\r\n                    <annotationProcessorPaths>\r\n                        <path>\r\n                            <groupId>org.projectlombok</groupId>\r\n                            <artifactId>lombok</artifactId>\r\n                            <version>1.18.36</version>\r\n                        </path>\r\n                        <path>\r\n                            <groupId>org.mapstruct</groupId>\r\n                            <artifactId>mapstruct-processor</artifactId>\r\n                            <version>1.5.3.Final</version>\r\n                        </path>\r\n                    </annotationProcessorPaths>\r\n                    <compilerArgs>--enable-preview</compilerArgs>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/pom.xml b/Backend/pom.xml
--- a/Backend/pom.xml	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ b/Backend/pom.xml	(date 1745948809937)
@@ -234,5 +234,4 @@
             </plugin>
         </plugins>
     </build>
-
 </project>
Index: Docker/db_data/base/1/pg_filenode.map
===================================================================
diff --git a/Docker/db_data/base/1/pg_filenode.map b/Docker/db_data/base/1/pg_filenode.map
deleted file mode 100644
--- a/Docker/db_data/base/1/pg_filenode.map	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ /dev/null	(revision 96685089c8c08d58820099752c22f3948b43319c)
@@ -1,19 +0,0 @@
-'Y    �  �  �  �  �  �  �  �          K  K  L  L  �
-  �
-  �
-  �
-  �
-  �
-  �
-  �
-  b
-  b
-  c
-  c
-  f
-  f
-  g
-  g
-  
-  
-                                                                                                                                                                                                                                                                                                                                                                                          ����
\ No newline at end of file
Index: Docker/db_data/base/5/pg_filenode.map
===================================================================
diff --git a/Docker/db_data/base/5/pg_filenode.map b/Docker/db_data/base/5/pg_filenode.map
deleted file mode 100644
--- a/Docker/db_data/base/5/pg_filenode.map	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ /dev/null	(revision 96685089c8c08d58820099752c22f3948b43319c)
@@ -1,19 +0,0 @@
-'Y    �  �  �  �  �  �  �  �          K  K  L  L  �
-  �
-  �
-  �
-  �
-  �
-  �
-  �
-  b
-  b
-  c
-  c
-  f
-  f
-  g
-  g
-  
-  
-                                                                                                                                                                                                                                                                                                                                                                                          ����
\ No newline at end of file
Index: Docker/db_data/base/4/pg_filenode.map
===================================================================
diff --git a/Docker/db_data/base/4/pg_filenode.map b/Docker/db_data/base/4/pg_filenode.map
deleted file mode 100644
--- a/Docker/db_data/base/4/pg_filenode.map	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ /dev/null	(revision 96685089c8c08d58820099752c22f3948b43319c)
@@ -1,19 +0,0 @@
-'Y    �  �  �  �  �  �  �  �          K  K  L  L  �
-  �
-  �
-  �
-  �
-  �
-  �
-  �
-  b
-  b
-  c
-  c
-  f
-  f
-  g
-  g
-  
-  
-                                                                                                                                                                                                                                                                                                                                                                                          ����
\ No newline at end of file
Index: Docker/db_data/base/16384/pg_filenode.map
===================================================================
diff --git a/Docker/db_data/base/16384/pg_filenode.map b/Docker/db_data/base/16384/pg_filenode.map
deleted file mode 100644
--- a/Docker/db_data/base/16384/pg_filenode.map	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ /dev/null	(revision 96685089c8c08d58820099752c22f3948b43319c)
@@ -1,19 +0,0 @@
-'Y    �  �  �  �  �  �  �  �          K  K  L  L  �
-  �
-  �
-  �
-  �
-  �
-  �
-  �
-  b
-  b
-  c
-  c
-  f
-  f
-  g
-  g
-  
-  
-                                                                                                                                                                                                                                                                                                                                                                                          ����
\ No newline at end of file
Index: Backend/target/generated-sources/annotations/com/example/domain/api/ans_api_module/template/util/mapper/AnswerMapperImpl.java
===================================================================
diff --git a/Backend/target/generated-sources/annotations/com/example/domain/api/ans_api_module/template/util/mapper/AnswerMapperImpl.java b/Backend/target/generated-sources/annotations/com/example/domain/api/ans_api_module/template/util/mapper/AnswerMapperImpl.java
deleted file mode 100644
--- a/Backend/target/generated-sources/annotations/com/example/domain/api/ans_api_module/template/util/mapper/AnswerMapperImpl.java	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ /dev/null	(revision 96685089c8c08d58820099752c22f3948b43319c)
@@ -1,183 +0,0 @@
-package com.example.domain.api.ans_api_module.template.util.mapper;
-
-import com.example.database.model.ai_module.PredefinedAnswer;
-import com.example.database.model.company_subscription_module.company.Company;
-import com.example.domain.dto.ans_module.predefined_answer.files.CsvAnswerDto;
-import com.example.domain.dto.ans_module.predefined_answer.files.JsonAnswerDto;
-import com.example.domain.dto.ans_module.predefined_answer.request.AnswerCreateRequest;
-import com.example.domain.dto.ans_module.predefined_answer.request.AnswerUpdateRequest;
-import com.example.domain.dto.ans_module.predefined_answer.response.PredefinedAnswerResponse;
-import java.util.ArrayList;
-import java.util.List;
-import javax.annotation.processing.Generated;
-import org.springframework.stereotype.Component;
-
-@Generated(
-    value = "org.mapstruct.ap.MappingProcessor",
-    date = "2025-03-31T20:04:21+0300",
-    comments = "version: 1.5.3.Final, compiler: javac, environment: Java 22.0.1 (Oracle Corporation)"
-)
-@Component
-public class AnswerMapperImpl implements AnswerMapper {
-
-    @Override
-    public PredefinedAnswer toEntity(PredefinedAnswerResponse d) {
-        if ( d == null ) {
-            return null;
-        }
-
-        PredefinedAnswer predefinedAnswer = new PredefinedAnswer();
-
-        predefinedAnswer.setId( d.getId() );
-        predefinedAnswer.setCategory( d.getCategory() );
-        predefinedAnswer.setTitle( d.getTitle() );
-        predefinedAnswer.setAnswer( d.getAnswer() );
-        predefinedAnswer.setCreatedAt( d.getCreatedAt() );
-
-        return predefinedAnswer;
-    }
-
-    @Override
-    public List<PredefinedAnswer> toEntityList(List<PredefinedAnswerResponse> ds) {
-        if ( ds == null ) {
-            return null;
-        }
-
-        List<PredefinedAnswer> list = new ArrayList<PredefinedAnswer>( ds.size() );
-        for ( PredefinedAnswerResponse predefinedAnswerResponse : ds ) {
-            list.add( toEntity( predefinedAnswerResponse ) );
-        }
-
-        return list;
-    }
-
-    @Override
-    public List<PredefinedAnswerResponse> toDtoList(List<PredefinedAnswer> es) {
-        if ( es == null ) {
-            return null;
-        }
-
-        List<PredefinedAnswerResponse> list = new ArrayList<PredefinedAnswerResponse>( es.size() );
-        for ( PredefinedAnswer predefinedAnswer : es ) {
-            list.add( toDto( predefinedAnswer ) );
-        }
-
-        return list;
-    }
-
-    @Override
-    public PredefinedAnswer toEntity(AnswerCreateRequest dto) {
-        if ( dto == null ) {
-            return null;
-        }
-
-        PredefinedAnswer predefinedAnswer = new PredefinedAnswer();
-
-        predefinedAnswer.setCategory( dto.getCategory() );
-        predefinedAnswer.setTitle( dto.getTitle() );
-        predefinedAnswer.setAnswer( dto.getAnswer() );
-
-        predefinedAnswer.setCompany( companyRepository.findById(dto.getCompanyId()).orElseThrow(() -> new CompanyNotFoundException(dto.getCompanyId())) );
-
-        return predefinedAnswer;
-    }
-
-    @Override
-    public PredefinedAnswer toEntity(AnswerUpdateRequest dto) {
-        if ( dto == null ) {
-            return null;
-        }
-
-        PredefinedAnswer predefinedAnswer = new PredefinedAnswer();
-
-        predefinedAnswer.setId( dto.getId() );
-        predefinedAnswer.setCategory( dto.getCategory() );
-        predefinedAnswer.setTitle( dto.getTitle() );
-        predefinedAnswer.setAnswer( dto.getAnswer() );
-
-        return predefinedAnswer;
-    }
-
-    @Override
-    public PredefinedAnswerResponse toDto(PredefinedAnswer entity) {
-        if ( entity == null ) {
-            return null;
-        }
-
-        PredefinedAnswerResponse predefinedAnswerResponse = new PredefinedAnswerResponse();
-
-        predefinedAnswerResponse.setCompanyId( entityCompanyId( entity ) );
-        predefinedAnswerResponse.setId( entity.getId() );
-        predefinedAnswerResponse.setCategory( entity.getCategory() );
-        predefinedAnswerResponse.setTitle( entity.getTitle() );
-        predefinedAnswerResponse.setAnswer( entity.getAnswer() );
-        predefinedAnswerResponse.setCreatedAt( entity.getCreatedAt() );
-
-        return predefinedAnswerResponse;
-    }
-
-    @Override
-    public List<PredefinedAnswerResponse> toDto(List<PredefinedAnswer> entityList) {
-        if ( entityList == null ) {
-            return null;
-        }
-
-        List<PredefinedAnswerResponse> list = new ArrayList<PredefinedAnswerResponse>( entityList.size() );
-        for ( PredefinedAnswer predefinedAnswer : entityList ) {
-            list.add( toDto( predefinedAnswer ) );
-        }
-
-        return list;
-    }
-
-    @Override
-    public PredefinedAnswer csvDtoToEntity(CsvAnswerDto dto, Integer companyId) {
-        if ( dto == null && companyId == null ) {
-            return null;
-        }
-
-        PredefinedAnswer predefinedAnswer = new PredefinedAnswer();
-
-        if ( dto != null ) {
-            predefinedAnswer.setCategory( dto.getCategory() );
-            predefinedAnswer.setTitle( dto.getTitle() );
-            predefinedAnswer.setAnswer( dto.getAnswer() );
-        }
-        predefinedAnswer.setCompany( getCompany(companyId) );
-
-        return predefinedAnswer;
-    }
-
-    @Override
-    public PredefinedAnswer jsonDtoToEntity(JsonAnswerDto dto, Integer companyId, String defaultCategory) {
-        if ( dto == null && companyId == null && defaultCategory == null ) {
-            return null;
-        }
-
-        PredefinedAnswer predefinedAnswer = new PredefinedAnswer();
-
-        if ( dto != null ) {
-            predefinedAnswer.setTitle( dto.getTitle() );
-            predefinedAnswer.setAnswer( dto.getAnswer() );
-        }
-        predefinedAnswer.setCompany( getCompany(companyId) );
-        predefinedAnswer.setCategory( resolveCategory(dto.getCategory(), defaultCategory) );
-
-        return predefinedAnswer;
-    }
-
-    private Integer entityCompanyId(PredefinedAnswer predefinedAnswer) {
-        if ( predefinedAnswer == null ) {
-            return null;
-        }
-        Company company = predefinedAnswer.getCompany();
-        if ( company == null ) {
-            return null;
-        }
-        Integer id = company.getId();
-        if ( id == null ) {
-            return null;
-        }
-        return id;
-    }
-}
Index: Docker/db_data/global/pg_filenode.map
===================================================================
diff --git a/Docker/db_data/global/pg_filenode.map b/Docker/db_data/global/pg_filenode.map
deleted file mode 100644
--- a/Docker/db_data/global/pg_filenode.map	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ /dev/null	(revision 96685089c8c08d58820099752c22f3948b43319c)
@@ -1,17 +0,0 @@
-'Y 2   �  �  �  �  �  �  �  �  �  �  �  �  \	  \	  p  p      c  c  �  �  Q  Q  R  R  �  �  �  �  Y  Y  Z  Z  O  O  P  P          U  U  V  V  �  �  �  �  d  d  e  e  W  W  X  X  o
-  o
-  p
-  p
-  �  �  �
-  �
-  �
-  �
-  t
-  t
-  u
-  u
-  �  �  �
-  �
-  �
-  �
-  �  �  �  �  �  �  ]	  ]	  q  q  r  r  	  	  f  f  g  g  �  �  �  �                                                                                                                  ��s
\ No newline at end of file
Index: Backend/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\r\n  application:\r\n    name: Backend\r\n  devtools:\r\n    livereload:\r\n      enabled: false\r\n\r\n  datasource:\r\n    url: jdbc:postgresql://localhost:5432/ans_machine_db\r\n    username: postgres\r\n    password: nikita090504\r\n    driver-class-name: org.postgresql.Driver\r\n    hikari:\r\n      maximum-pool-size: 20\r\n      minimum-idle: 10\r\n      idle-timeout: 30000\r\n      max-lifetime: 1800000\r\n\r\n  task:\r\n    execution:\r\n      pool:\r\n        core-size: 10\r\n        max-size: 20\r\n        queue-capacity: 50\r\n        keep-alive: 30s\r\n\r\n  jpa:\r\n    database-platform: org.hibernate.dialect.PostgreSQLDialect\r\n    hibernate:\r\n      ddl-auto: update\r\n      show-sql: true\r\n    properties:\r\n      hibernate:\r\n        format_sql: true\r\n        use_sql_comments: true\r\n    open-in-view: false\r\n\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 10MB\r\n      max-request-size: 20MB\r\n\r\n  websocket:\r\n    endpoint: /test_endpoint_ans\r\n    allowed-origin-patterns: \"*\"\r\n    application-destination-prefix: /app\r\n    user-destination-prefix: /user\r\n\r\n\r\nvalidation:\r\n  file-upload:\r\n    max-file-size: 10MB\r\n    allowed-file-types:\r\n      - \"image/png\"\r\n      - \"image/jpeg\"\r\n      - \"application/pdf\"\r\n\r\nfile-upload:\r\n  location: /uploads\r\n  clamav-host: localhost\r\n  clamav-port: 3310\r\n\r\n# Настройки чатов\r\nchat:\r\n  limits:\r\n    max-messages-per-chat: 1000\r\n    max-attachments-per-message: 5\r\n    max-message-length: 1000\r\n    max-chats-per-user: 10\r\n    max-users-per-chat: 5\r\n    message-rate-limit: 60\r\n    attachment-max-size: 10MB\r\n  lifetime:\r\n    inactive-chat-close-time: PT24H\r\n  status:\r\n    active: ACTIVE\r\n    closed: CLOSED\r\n    pending: PENDING\r\n\r\n# Настройки уведомлений\r\nnotification:\r\n  interval: 5s\r\n  templates:\r\n    new-message: \"Новое сообщение от %s: %s\"\r\n    operator-typing: \"Оператор печатает...\"\r\n\r\ntelegram:\r\n  test_bot:\r\n    username: dialog_x_qanswer_bot\r\n    token: 7520341907:AAFkCZPkx7d676-qwLMuAhfL4jaXWlU_Blg\r\n\r\nvk:\r\n  bot:\r\n    token:\r\n  group:\r\n    id:\r\n  api:\r\n    version: 5.199\r\n\r\nemail:\r\n  imap_host:\r\n    yandex: \"imap.yandex.com\"\r\n    gmail: \"imap.gmail.com\"\r\n  imap_port: 993\r\n  imap_ssl_enable: true\r\n  imap_store: \"imaps\"\r\n  imap_folder: \"INBOX\"\r\n\r\n\r\nans_machine:\r\n  npl:\r\n    speller:\r\n      yandex_speller_url: \"https://speller.yandex.net/services/spellservice.json/checkText\"\r\n\r\ncorrection:\r\n  enabled: true\r\n  rules:\r\n    active: commaBeforeConjunction, commaAfterAddress,commaListCorrection, fixCommaSpacingCorrection, removeExtraCorrection\r\n    order: abbreviationDotCorrection, sentenceEndingDotCorrection, exclamationMarkCorrection, questionMarkCorrection\r\n\r\n  stats:\r\n    directory: stats\r\n    flush-interval: 1m\r\n    metrics:\r\n      file: stats/metrics/metrics.log\r\n      log-interval: 1m\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/target/classes/application.yml b/Backend/target/classes/application.yml
--- a/Backend/target/classes/application.yml	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ b/Backend/target/classes/application.yml	(date 1745948809937)
@@ -16,14 +16,6 @@
       idle-timeout: 30000
       max-lifetime: 1800000
 
-  task:
-    execution:
-      pool:
-        core-size: 10
-        max-size: 20
-        queue-capacity: 50
-        keep-alive: 30s
-
   jpa:
     database-platform: org.hibernate.dialect.PostgreSQLDialect
     hibernate:
@@ -107,28 +99,4 @@
   imap_folder: "INBOX"
 
 
-ans_machine:
-  npl:
-    speller:
-      yandex_speller_url: "https://speller.yandex.net/services/spellservice.json/checkText"
-
-correction:
-  enabled: true
-  rules:
-    active: commaBeforeConjunction, commaAfterAddress,commaListCorrection, fixCommaSpacingCorrection, removeExtraCorrection
-    order: abbreviationDotCorrection, sentenceEndingDotCorrection, exclamationMarkCorrection, questionMarkCorrection
-
-  stats:
-    directory: stats
-    flush-interval: 1m
-    metrics:
-      file: stats/metrics/metrics.log
-      log-interval: 1m
-
-
-
-
-
-
-
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"EntryPointsManager\">\r\n    <writeAnnotations>\r\n      <writeAnnotation name=\"lombok.Getter\" />\r\n    </writeAnnotations>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\r\n    <file type=\"web\" url=\"file://$PROJECT_DIR$/Backend\" />\r\n  </component>\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/Backend/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"ignoredFiles\">\r\n      <set>\r\n        <option value=\"$PROJECT_DIR$/Backend/pom.xml\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_22\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ b/.idea/misc.xml	(date 1745948809937)
@@ -15,13 +15,8 @@
         <option value="$PROJECT_DIR$/Backend/pom.xml" />
       </list>
     </option>
-    <option name="ignoredFiles">
-      <set>
-        <option value="$PROJECT_DIR$/Backend/pom.xml" />
-      </set>
-    </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="corretto-22" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: Backend/target/generated-sources/annotations/com/example/domain/dto/mapper/MapperDtoImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.domain.dto.mapper;\r\n\r\nimport com.example.database.model.chats_messages_module.ChatAttachment;\r\nimport com.example.database.model.chats_messages_module.ChatMessage;\r\nimport com.example.database.model.chats_messages_module.chat.Chat;\r\nimport com.example.database.model.company_subscription_module.company.Company;\r\nimport com.example.database.model.company_subscription_module.user_roles.UserRole;\r\nimport com.example.database.model.company_subscription_module.user_roles.role.Role;\r\nimport com.example.database.model.company_subscription_module.user_roles.role.RoleName;\r\nimport com.example.database.model.company_subscription_module.user_roles.user.Gender;\r\nimport com.example.database.model.company_subscription_module.user_roles.user.User;\r\nimport com.example.database.model.company_subscription_module.user_roles.user.UserStatus;\r\nimport com.example.database.model.crm_module.client.Client;\r\nimport com.example.database.model.crm_module.client.TypeClient;\r\nimport com.example.domain.dto.chat_module.ChatAttachmentDto;\r\nimport com.example.domain.dto.chat_module.ChatDto;\r\nimport com.example.domain.dto.chat_module.MessageDto;\r\nimport com.example.domain.dto.company_module.ClientDto;\r\nimport com.example.domain.dto.company_module.CompanyDto;\r\nimport com.example.domain.dto.company_module.RoleDto;\r\nimport com.example.domain.dto.company_module.UserDto;\r\nimport com.example.domain.dto.company_module.UserRoleDto;\r\nimport java.util.Date;\r\nimport javax.annotation.processing.Generated;\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Generated(\r\n    value = \"org.mapstruct.ap.MappingProcessor\",\r\n    date = \"2025-03-31T20:04:21+0300\",\r\n    comments = \"version: 1.5.3.Final, compiler: javac, environment: Java 22.0.1 (Oracle Corporation)\"\r\n)\r\n@Component\r\npublic class MapperDtoImpl implements MapperDto {\r\n\r\n    @Override\r\n    public Chat toEntityChat(ChatDto chatDto) {\r\n        if ( chatDto == null ) {\r\n            return null;\r\n        }\r\n\r\n        Chat chat = new Chat();\r\n\r\n        chat.setUser( toEntityUser( chatDto.getUserDto() ) );\r\n        chat.setClient( toEntityClient( chatDto.getClientDto() ) );\r\n        chat.setId( chatDto.getId() );\r\n        chat.setChatChannel( chatDto.getChatChannel() );\r\n        chat.setStatus( chatDto.getStatus() );\r\n        chat.setCreatedAt( chatDto.getCreatedAt() );\r\n\r\n        return chat;\r\n    }\r\n\r\n    @Override\r\n    public ChatDto toDtoChat(Chat chat) {\r\n        if ( chat == null ) {\r\n            return null;\r\n        }\r\n\r\n        ChatDto chatDto = new ChatDto();\r\n\r\n        chatDto.setUserDto( toDtoUser( chat.getUser() ) );\r\n        chatDto.setClientDto( toDtoClient( chat.getClient() ) );\r\n        chatDto.setId( chat.getId() );\r\n        chatDto.setChatChannel( chat.getChatChannel() );\r\n        chatDto.setStatus( chat.getStatus() );\r\n        chatDto.setCreatedAt( chat.getCreatedAt() );\r\n\r\n        return chatDto;\r\n    }\r\n\r\n    @Override\r\n    public ChatMessage toEntityChatMessage(MessageDto messageDto) {\r\n        if ( messageDto == null ) {\r\n            return null;\r\n        }\r\n\r\n        ChatMessage chatMessage = new ChatMessage();\r\n\r\n        chatMessage.setChat( toEntityChat( messageDto.getChatDto() ) );\r\n        chatMessage.setContent( messageDto.getContent() );\r\n        chatMessage.setSentAt( messageDto.getSentAt() );\r\n\r\n        return chatMessage;\r\n    }\r\n\r\n    @Override\r\n    public MessageDto toDtoChatMessage(ChatMessage chatMessage) {\r\n        if ( chatMessage == null ) {\r\n            return null;\r\n        }\r\n\r\n        MessageDto messageDto = new MessageDto();\r\n\r\n        messageDto.setChatDto( toDtoChat( chatMessage.getChat() ) );\r\n        messageDto.setContent( chatMessage.getContent() );\r\n        messageDto.setSentAt( chatMessage.getSentAt() );\r\n\r\n        return messageDto;\r\n    }\r\n\r\n    @Override\r\n    public ChatAttachment toEntityChatAttachment(ChatAttachmentDto chatAttachmentDto) {\r\n        if ( chatAttachmentDto == null ) {\r\n            return null;\r\n        }\r\n\r\n        ChatAttachment chatAttachment = new ChatAttachment();\r\n\r\n        chatAttachment.setFileUrl( chatAttachmentDto.getFileUrl() );\r\n        chatAttachment.setFileType( chatAttachmentDto.getFileType() );\r\n\r\n        return chatAttachment;\r\n    }\r\n\r\n    @Override\r\n    public ChatAttachmentDto toDtoChatAttachment(ChatAttachment chatAttachment) {\r\n        if ( chatAttachment == null ) {\r\n            return null;\r\n        }\r\n\r\n        ChatAttachmentDto chatAttachmentDto = new ChatAttachmentDto();\r\n\r\n        chatAttachmentDto.setFileUrl( chatAttachment.getFileUrl() );\r\n        chatAttachmentDto.setFileType( chatAttachment.getFileType() );\r\n\r\n        return chatAttachmentDto;\r\n    }\r\n\r\n    @Override\r\n    public Client toEntityClient(ClientDto clientDto) {\r\n        if ( clientDto == null ) {\r\n            return null;\r\n        }\r\n\r\n        Client client = new Client();\r\n\r\n        client.setUser( toEntityUser( clientDto.getUserDto() ) );\r\n        client.setId( clientDto.getId() );\r\n        client.setName( clientDto.getName() );\r\n        if ( clientDto.getTypeClient() != null ) {\r\n            client.setTypeClient( Enum.valueOf( TypeClient.class, clientDto.getTypeClient() ) );\r\n        }\r\n        client.setTag( clientDto.getTag() );\r\n        client.setCreatedAt( clientDto.getCreatedAt() );\r\n        client.setUpdatedAt( clientDto.getUpdatedAt() );\r\n\r\n        return client;\r\n    }\r\n\r\n    @Override\r\n    public ClientDto toDtoClient(Client client) {\r\n        if ( client == null ) {\r\n            return null;\r\n        }\r\n\r\n        ClientDto clientDto = new ClientDto();\r\n\r\n        clientDto.setUserDto( toDtoUser( client.getUser() ) );\r\n        clientDto.setId( client.getId() );\r\n        clientDto.setName( client.getName() );\r\n        if ( client.getTypeClient() != null ) {\r\n            clientDto.setTypeClient( client.getTypeClient().name() );\r\n        }\r\n        clientDto.setTag( client.getTag() );\r\n        clientDto.setCreatedAt( client.getCreatedAt() );\r\n        clientDto.setUpdatedAt( client.getUpdatedAt() );\r\n\r\n        return clientDto;\r\n    }\r\n\r\n    @Override\r\n    public Company toEntityCompany(CompanyDto companyDto) {\r\n        if ( companyDto == null ) {\r\n            return null;\r\n        }\r\n\r\n        Company company = new Company();\r\n\r\n        company.setId( companyDto.getId() );\r\n        company.setName( companyDto.getName() );\r\n        company.setContactEmail( companyDto.getContactEmail() );\r\n        company.setCreatedAt( companyDto.getCreatedAt() );\r\n        company.setUpdatedAt( companyDto.getUpdatedAt() );\r\n\r\n        return company;\r\n    }\r\n\r\n    @Override\r\n    public CompanyDto toDtoCompany(Company company) {\r\n        if ( company == null ) {\r\n            return null;\r\n        }\r\n\r\n        CompanyDto companyDto = new CompanyDto();\r\n\r\n        companyDto.setId( company.getId() );\r\n        companyDto.setName( company.getName() );\r\n        companyDto.setContactEmail( company.getContactEmail() );\r\n        companyDto.setCreatedAt( company.getCreatedAt() );\r\n        companyDto.setUpdatedAt( company.getUpdatedAt() );\r\n\r\n        return companyDto;\r\n    }\r\n\r\n    @Override\r\n    public User toEntityUser(UserDto userDto) {\r\n        if ( userDto == null ) {\r\n            return null;\r\n        }\r\n\r\n        User user = new User();\r\n\r\n        user.setCompany( toEntityCompany( userDto.getCompanyDto() ) );\r\n        user.setId( userDto.getId() );\r\n        user.setFullName( userDto.getFullName() );\r\n        user.setEmail( userDto.getEmail() );\r\n        if ( userDto.getStatus() != null ) {\r\n            user.setStatus( Enum.valueOf( UserStatus.class, userDto.getStatus() ) );\r\n        }\r\n        user.setDateOfBirth( userDto.getDateOfBirth() );\r\n        if ( userDto.getGender() != null ) {\r\n            user.setGender( Enum.valueOf( Gender.class, userDto.getGender() ) );\r\n        }\r\n        user.setProfilePicture( userDto.getProfilePicture() );\r\n        user.setCreatedAt( userDto.getCreatedAt() );\r\n        user.setUpdatedAt( userDto.getUpdatedAt() );\r\n\r\n        return user;\r\n    }\r\n\r\n    @Override\r\n    public UserDto toDtoUser(User user) {\r\n        if ( user == null ) {\r\n            return null;\r\n        }\r\n\r\n        UserDto userDto = new UserDto();\r\n\r\n        userDto.setCompanyDto( toDtoCompany( user.getCompany() ) );\r\n        userDto.setId( user.getId() );\r\n        userDto.setFullName( user.getFullName() );\r\n        userDto.setEmail( user.getEmail() );\r\n        if ( user.getStatus() != null ) {\r\n            userDto.setStatus( user.getStatus().name() );\r\n        }\r\n        userDto.setDateOfBirth( user.getDateOfBirth() );\r\n        if ( user.getGender() != null ) {\r\n            userDto.setGender( user.getGender().name() );\r\n        }\r\n        userDto.setProfilePicture( user.getProfilePicture() );\r\n        userDto.setCreatedAt( user.getCreatedAt() );\r\n        userDto.setUpdatedAt( user.getUpdatedAt() );\r\n\r\n        return userDto;\r\n    }\r\n\r\n    @Override\r\n    public Role toEntityRole(RoleDto roleDto) {\r\n        if ( roleDto == null ) {\r\n            return null;\r\n        }\r\n\r\n        Role role = new Role();\r\n\r\n        role.setId( roleDto.getId() );\r\n        if ( roleDto.getName() != null ) {\r\n            role.setName( Enum.valueOf( RoleName.class, roleDto.getName() ) );\r\n        }\r\n        role.setDescription( roleDto.getDescription() );\r\n\r\n        return role;\r\n    }\r\n\r\n    @Override\r\n    public RoleDto toDtoRole(Role role) {\r\n        if ( role == null ) {\r\n            return null;\r\n        }\r\n\r\n        RoleDto roleDto = new RoleDto();\r\n\r\n        roleDto.setId( role.getId() );\r\n        if ( role.getName() != null ) {\r\n            roleDto.setName( role.getName().name() );\r\n        }\r\n        roleDto.setDescription( role.getDescription() );\r\n\r\n        return roleDto;\r\n    }\r\n\r\n    @Override\r\n    public UserRole toEntityUserRole(UserRoleDto userRoleDto) {\r\n        if ( userRoleDto == null ) {\r\n            return null;\r\n        }\r\n\r\n        UserRole userRole = new UserRole();\r\n\r\n        return userRole;\r\n    }\r\n\r\n    @Override\r\n    public UserRoleDto toDtoUserRole(UserRole userRole) {\r\n        if ( userRole == null ) {\r\n            return null;\r\n        }\r\n\r\n        UserRoleDto userRoleDto = new UserRoleDto();\r\n\r\n        return userRoleDto;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Backend/target/generated-sources/annotations/com/example/domain/dto/mapper/MapperDtoImpl.java b/Backend/target/generated-sources/annotations/com/example/domain/dto/mapper/MapperDtoImpl.java
--- a/Backend/target/generated-sources/annotations/com/example/domain/dto/mapper/MapperDtoImpl.java	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ b/Backend/target/generated-sources/annotations/com/example/domain/dto/mapper/MapperDtoImpl.java	(date 1745948809938)
@@ -26,8 +26,8 @@
 
 @Generated(
     value = "org.mapstruct.ap.MappingProcessor",
-    date = "2025-03-31T20:04:21+0300",
-    comments = "version: 1.5.3.Final, compiler: javac, environment: Java 22.0.1 (Oracle Corporation)"
+    date = "2025-04-29T20:45:26+0300",
+    comments = "version: 1.5.3.Final, compiler: javac, environment: Java 22.0.2 (Amazon.com Inc.)"
 )
 @Component
 public class MapperDtoImpl implements MapperDto {
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Annotation profile for Backend\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <processorPath useClasspath=\"false\">\r\n          <entry name=\"$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar\" />\r\n          <entry name=\"$MAVEN_REPOSITORY$/org/mapstruct/mapstruct-processor/1.5.3.Final/mapstruct-processor-1.5.3.Final.jar\" />\r\n          <entry name=\"$MAVEN_REPOSITORY$/org/mapstruct/mapstruct/1.5.3.Final/mapstruct-1.5.3.Final.jar\" />\r\n        </processorPath>\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel>\r\n      <module name=\"Backend\" target=\"17\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"Backend\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision 96685089c8c08d58820099752c22f3948b43319c)
+++ b/.idea/compiler.xml	(date 1745948809936)
@@ -2,6 +2,7 @@
 <project version="4">
   <component name="CompilerConfiguration">
     <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
       <profile name="Annotation profile for Backend" enabled="true">
         <sourceOutputDir name="target/generated-sources/annotations" />
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
@@ -11,11 +12,9 @@
           <entry name="$MAVEN_REPOSITORY$/org/mapstruct/mapstruct-processor/1.5.3.Final/mapstruct-processor-1.5.3.Final.jar" />
           <entry name="$MAVEN_REPOSITORY$/org/mapstruct/mapstruct/1.5.3.Final/mapstruct-1.5.3.Final.jar" />
         </processorPath>
+        <module name="Backend" />
       </profile>
     </annotationProcessing>
-    <bytecodeTargetLevel>
-      <module name="Backend" target="17" />
-    </bytecodeTargetLevel>
   </component>
   <component name="JavacSettings">
     <option name="ADDITIONAL_OPTIONS_OVERRIDE">
